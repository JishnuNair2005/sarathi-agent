// onboarding.js
export function handleOnboarding(user, message) {
    let responseMessage = "";

    switch (user.state) {
        case "awaiting_language":
            if (message.includes("2")) {
                user.profile.language = "Hindi";
                responseMessage = "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! ‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?";
            } else {
                user.profile.language = "English";
                responseMessage = "Welcome! To get started, what is your name?";
            }
            user.state = "awaiting_name";
            break;

        case "awaiting_name":
            user.profile.name = message;
            user.state = "confirming_name";
            responseMessage = user.profile.language === "Hindi"
                ? `‡§†‡•Ä‡§ï ‡§π‡•à, ‡§Æ‡•á‡§∞‡•á ‡§™‡§æ‡§∏ ‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ *${message}* ‡§π‡•à‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ø‡§π ‡§∏‡§π‡•Ä ‡§π‡•à? (‡§π‡§æ‡§Å/‡§®‡§π‡•Ä‡§Ç)`
                : `Great, I have your name as *${message}*. Is that correct? (Yes/No)`;
            break;

        case "confirming_name":
            const isYes = message.toLowerCase() === 'yes' || message.toLowerCase() === '‡§π‡§æ‡§Å';
            if (isYes) {
                user.state = "awaiting_vehicle";
                responseMessage = user.profile.language === "Hindi"
                    ? `‡§¨‡§¢‡§º‡§ø‡§Ø‡§æ! ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§ï‡§æ‡§Æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§æ‡§π‡§® ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç? (‡§â‡§¶‡§æ‡§π‡§∞‡§£: ‡§π‡•Ä‡§∞‡•ã ‡§∏‡•ç‡§™‡•ç‡§≤‡•á‡§Ç‡§°‡§∞ ‡§¨‡§æ‡§á‡§ï, ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç)`
                    : `Perfect! Do you use a vehicle for your work? (e.g., Hero Splendor bike, or No)`;
            } else {
                user.state = "awaiting_name";
                responseMessage = user.profile.language === "Hindi"
                    ? `‡§Æ‡•á‡§∞‡•Ä ‡§ó‡§≤‡§§‡•Ä‡•§ ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã ‡§ï‡•ç‡§Ø‡§æ ‡§¨‡•Å‡§≤‡§æ‡§ä‡§Å?`
                    : `My mistake. What should I call you?`;
            }
            break;

        case "awaiting_vehicle":
            if (message.toLowerCase().includes('no') || message.toLowerCase().includes('‡§®‡§π‡•Ä‡§Ç')) {
                user.profile.vehicle = "None";
            } else {
                user.profile.vehicle = message;
            }
            user.state = "awaiting_income";
            responseMessage = user.profile.language === "Hindi"
                ? `‡§∏‡§Æ‡§ù ‡§ó‡§Ø‡§æ‡•§ ‡§Ü‡§™‡§ï‡•Ä ‡§π‡§∞ ‡§¶‡§ø‡§® ‡§ï‡•Ä ‡§î‡§∏‡§§ ‡§Ü‡§Ø ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à? (‡§â‡§¶‡§æ‡§π‡§∞‡§£: 1200)`
                : `Got it. What's your average income per day? (e.g., 1200)`;
            break;

        case "awaiting_income":
            user.profile.financials.income_per_day_avg = parseFloat(message) || 0;
            user.state = "awaiting_balance";
            responseMessage = user.profile.language === "Hindi"
                ? `‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶! ‡§î‡§∞ ‡§Ü‡§™‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§®‡§ø‡§§ ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§¨‡§ö‡§§ ‡§Ø‡§æ ‡§¨‡•à‡§≤‡•á‡§Ç‡§∏ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?`
                : `Thanks! And what's your approximate current savings or balance?`;
            break;

        case "awaiting_balance":
            user.profile.financials.current_balance = parseFloat(message) || 0;
            user.state = "awaiting_health";
            responseMessage = user.profile.language === "Hindi"
                ? `‡§≤‡§ó‡§≠‡§ó ‡§π‡•ã ‡§ó‡§Ø‡§æ! ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•ã‡§à ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡•Å‡§ù‡•á ‡§™‡§§‡§æ ‡§π‡•ã‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è? ('‡§ï‡•ã‡§à ‡§®‡§π‡•Ä‡§Ç' ‡§≤‡§ø‡§ñ‡•á‡§Ç)`
                : `Almost done! Any ongoing health conditions I should know about? (or 'None')`;
            break;
      
        case "awaiting_health":
            if (message.toLowerCase() !== 'none' && message.toLowerCase() !== 'no' && message.toLowerCase() !== '‡§ï‡•ã‡§à ‡§®‡§π‡•Ä‡§Ç') {
                user.profile.health.conditions.push(message);
            }
            user.state = "awaiting_loans";
            responseMessage = user.profile.language === "Hindi"
                ? `‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§ ‡§Ö‡§Ç‡§§ ‡§Æ‡•á‡§Ç, ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡§æ ‡§ï‡•ã‡§à ‡§∏‡§ï‡•ç‡§∞‡§ø‡§Ø ‡§≤‡•ã‡§® ‡§Ø‡§æ EMI ‡§π‡•à? (‡§â‡§¶‡§æ‡§π‡§∞‡§£: '‡§´‡•ã‡§® EMI 2500' ‡§Ø‡§æ '‡§®‡§π‡•Ä‡§Ç')`
                : `Thank you. Lastly, any active loans or EMIs? (e.g., 'Phone EMI 2500' or 'No')`;
            break;

        case "awaiting_loans":
            if (message.toLowerCase() !== 'no' && message.toLowerCase() !== 'none' && message.toLowerCase() !== '‡§®‡§π‡•Ä‡§Ç') {
                user.profile.financials.loans.push({ name: message, monthly_emi: parseFloat(message.replace(/[^0-9]/g, '')) || 0 });
            }
            user.state = "onboarded";
            responseMessage = user.profile.language === "Hindi"
                ? `‡§¨‡§¢‡§º‡§ø‡§Ø‡§æ, ‡§Ö‡§¨ ‡§Ü‡§™ ‡§™‡•Ç‡§∞‡•Ä ‡§§‡§∞‡§π ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡§Ç! üéâ ‡§Ö‡§¨ ‡§Ü‡§™ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§∏‡§≤‡§æ‡§π ‡§Æ‡§æ‡§Ç‡§ó ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§`
                : `Perfect, you're all set up! üéâ You can now ask me for advice or tell me about your earnings and expenses.`;
            break;
    }
    return responseMessage;
}